services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: repertuar/backend-app:latest
    networks:
      - app-network
    environment:
      - SESSION_SECRET=${SESSION_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - AUTH_SECRET=${AUTH_SECRET}
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./my.cnf:/etc/mysql/my.cnf
      - mysql_data:/var/lib/mysql
    command: >
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 5s
      timeout: 60s
      retries: 5

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: repertuar/frontend-app:latest
    networks:
      - app-network
    environment:
      - NUXT_VITE_HMR_PORT=5173
      - NUXT_PUBLIC_API_BASE=${NUXT_PUBLIC_API_BASE}
      - BASE_URL=${BASE_URL}
      - APP_URL=${APP_URL}
      - AUTH_ORIGIN=${AUTH_ORIGIN}
      - NUXT_SESSION_PASSWORD=${NUXT_SESSION_PASSWORD}
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
