services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: repertuar/backend-app:latest
    container_name: back
    networks:
      - app-network
    environment:
      - SESSION_SECRET=${SESSION_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - AUTH_SECRET=${AUTH_SECRET}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    working_dir: /app

  mysql:
    image: mysql:8.0
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./my.cnf:/etc/mysql/my.cnf
      - mysql_data:/var/lib/mysql
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - app-network
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 5s
      timeout: 60s
      retries: 5

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: repertuar/frontend-app:latest
    container_name: fr
    networks:
      - app-network
    environment:
      - NUXT_VITE_HMR_PORT=5173
      - NUXT_PUBLIC_BASE_URL=${NUXT_PUBLIC_BASE_URL}
      - NUXT_BASE_PRIVATE_URL=${NUXT_BASE_PRIVATE_URL}
      - TESTS_LOGIN=${TESTS_LOGIN}
      - TESTS_PASSWORD=${TESTS_PASSWORD}
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
  elasticsearch:
    image: bitnami/elasticsearch:9.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false # Отключаем аутентификацию для разработки
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 20
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana: # Опционально - веб-интерфейс
    image: bitnami/kibana:9.0.0
    container_name: kb
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  es_data:
